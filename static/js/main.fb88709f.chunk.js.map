{"version":3,"sources":["sounds/WickedOnes.mp3","sounds/Fear.mp3","sounds/ThousandYears.mp3","sounds/SeeYouAgain.mp3","thumbnails/wickedonesthumbnail.jpg","thumbnails/fearthumbnail.jpg","thumbnails/thousandyearsthumbnail.jpg","thumbnails/seeyouagainthumbnail.jpg","components/card.jsx","components/home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","state","play","togglePlayPause","bind","this","props","pauseAudio","id","setState","playAudio","disbutton","className","onClick","style","float","src","image","alt","nextProps","prevState","reset","Component","Home","current","sound","Howl","wickedones","fear","thousandyears","seeyouagain","prev","console","log","load","unload","id2","pause","id1","image2","image3","image4","React","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fb88709f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WickedOnes.60476842.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Fear.95bf2540.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ThousandYears.3758f0cf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/SeeYouAgain.2017e866.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wickedonesthumbnail.17842b80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fearthumbnail.c4095a8d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thousandyearsthumbnail.b5ab0922.jpg\";","module.exports = __webpack_public_path__ + \"static/media/seeyouagainthumbnail.8b474da3.jpg\";","import React, {Component} from 'react';\r\nimport '../style.css'\r\nclass Card extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            play: false\r\n        }\r\n        this.togglePlayPause = this.togglePlayPause.bind(this)\r\n    }\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if(nextProps.id !== nextProps.reset){ return {play: false}}\r\n        else \r\n        return null\r\n    }\r\n    togglePlayPause(){\r\n        if(this.state.play){\r\n            this.props.pauseAudio(this.props.id)\r\n            this.setState({play: false})\r\n        }\r\n        else{\r\n            this.props.playAudio(this.props.id)\r\n            this.setState({play: true})\r\n        }\r\n    }\r\n    render(){\r\n        let disbutton\r\n        if(this.state.play){\r\n            disbutton = <div className = 'btn' id = 'pauseBtn' onClick = {this.togglePlayPause}></div>\r\n        }\r\n        else\r\n            disbutton = <div className = 'btn' id ='playBtn' onClick = {this.togglePlayPause}></div>\r\n        if(this.props.id === 'ThousandYears' || this.props.id  === 'SeeYouAgain'){\r\n            return(\r\n                <div className = 'card' style = {{float: 'right'}}>\r\n                <img src={this.props.image} alt=\"This is Wicked\"/>\r\n                { disbutton }\r\n                {/* <div class = 'btn' id = 'resume '></div> */}\r\n            </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div className = 'card'>\r\n                    <img src={this.props.image} alt=\"This is Wicked\"/>\r\n                    { disbutton }\r\n                    {/* <div class = 'btn' id = 'resume '></div> */}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport wickedones from '../sounds/WickedOnes.mp3'\r\nimport fear from '../sounds/Fear.mp3'\r\nimport thousandyears from '../sounds/ThousandYears.mp3'\r\nimport seeyouagain from '../sounds/SeeYouAgain.mp3'\r\nimport { Howl, Howler } from 'howler'\r\nimport Card from './card.jsx'\r\nimport '../style.css'\r\nimport image from '../thumbnails/wickedonesthumbnail.jpg'\r\nimport image2 from '../thumbnails/fearthumbnail.jpg'\r\nimport image3 from '../thumbnails/thousandyearsthumbnail.jpg'\r\nimport image4 from '../thumbnails/seeyouagainthumbnail.jpg'\r\nclass Home extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            current: '',\r\n            sound:'',\r\n            'Wicked': new Howl({src: wickedones}),\r\n            'Fear': new Howl({src: fear}),\r\n            'ThousandYears': new Howl({src: thousandyears}),\r\n            'SeeYouAgain': new Howl({src: seeyouagain})\r\n        }\r\n        this.playAudio = this.playAudio.bind(this)\r\n        // this.pauseAudio = this.pauseAudio.bind(this)\r\n    }\r\n    playAudio(id){\r\n        if(this.state.current === ''){\r\n            this.setState((prev)=>{\r\n                return {\r\n                    current: id,\r\n                    sound: prev[id]\r\n                }\r\n            },()=>{\r\n                console.log(this.state)\r\n                this.state.sound.load()\r\n                this.state.sound.play()\r\n            })\r\n        }\r\n        else if(this.state.current === id){\r\n            this.state.sound.play()\r\n        }\r\n        else{\r\n            this.state.sound.unload()\r\n            this.setState((prev)=>{\r\n                return {\r\n                    current: id,\r\n                    sound: prev[id],\r\n                }\r\n            },()=>{\r\n                console.log(id)\r\n                this.state.sound.load()\r\n                this.state.sound.play()\r\n            })\r\n        }\r\n    }\r\n    // pauseAudio(id){\r\n    //     if(this.state.current === id){\r\n    //         this.sound.pause()\r\n    //     }\r\n    //     else{\r\n    //         this.sound.unload()\r\n    //         this.setState((prev)=>{\r\n    //             return {\r\n    //                 current: id,\r\n    //                 sound: prev.id\r\n    //             }\r\n    //         })\r\n    //         this.sound.load()\r\n    //         this.sound.play()\r\n    //     }\r\n    // }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className ='header'></div>\r\n                <Card \r\n                    id = 'Wicked'\r\n                    playAudio = {(id2)=>{this.playAudio(id2)}}\r\n                    // pauseAudio = {(id)=>{this.pauseAudio(id)}}\r\n                    pauseAudio = {()=>{this.state.sound.pause()}}\r\n                    image = {image}\r\n                    reset = {this.state.current}\r\n                >\r\n                </Card>\r\n                <Card\r\n                    id = \"Fear\" \r\n                    playAudio = {(id1)=>{this.playAudio(id1)}}\r\n                    // pauseAudio = {(id)=>{this.pauseAudio(id)}}\r\n                    pauseAudio = {()=>{this.state.sound.pause()}}\r\n                    image = {image2}\r\n                    reset = {this.state.current}\r\n                >\r\n                </Card>\r\n                <Card\r\n                    id = \"ThousandYears\" \r\n                    playAudio = {(id1)=>{this.playAudio(id1)}}\r\n                    // pauseAudio = {(id)=>{this.pauseAudio(id)}}\r\n                    pauseAudio = {()=>{this.state.sound.pause()}}\r\n                    image = {image3}\r\n                    reset = {this.state.current}\r\n                >\r\n                </Card>\r\n                <Card\r\n                    id = \"SeeYouAgain\" \r\n                    playAudio = {(id1)=>{this.playAudio(id1)}}\r\n                    // pauseAudio = {(id)=>{this.pauseAudio(id)}}\r\n                    pauseAudio = {()=>{this.state.sound.pause()}}\r\n                    image = {image4}\r\n                    reset = {this.state.current}\r\n                >\r\n                </Card>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n export default Home","import React from 'react';\nimport './App.css';\nimport Home from './components/home.jsx'\n\nfunction App() {\n  return (\n    <Home></Home>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}